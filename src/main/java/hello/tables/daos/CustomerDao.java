/*
 * This file is generated by jOOQ.
 */
package hello.tables.daos;


import hello.tables.Customer;
import hello.tables.records.CustomerRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class CustomerDao extends DAOImpl<CustomerRecord, hello.tables.pojos.Customer, Integer> {

    /**
     * Create a new CustomerDao without any configuration
     */
    public CustomerDao() {
        super(Customer.CUSTOMER, hello.tables.pojos.Customer.class);
    }

    /**
     * Create a new CustomerDao with an attached configuration
     */
    public CustomerDao(Configuration configuration) {
        super(Customer.CUSTOMER, hello.tables.pojos.Customer.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(hello.tables.pojos.Customer object) {
        return object.getCustomerId();
    }

    /**
     * Fetch records that have <code>customer_id IN (values)</code>
     */
    public List<hello.tables.pojos.Customer> fetchByCustomerId(Integer... values) {
        return fetch(Customer.CUSTOMER.CUSTOMER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>customer_id = value</code>
     */
    public hello.tables.pojos.Customer fetchOneByCustomerId(Integer value) {
        return fetchOne(Customer.CUSTOMER.CUSTOMER_ID, value);
    }

    /**
     * Fetch records that have <code>store_id IN (values)</code>
     */
    public List<hello.tables.pojos.Customer> fetchByStoreId(Short... values) {
        return fetch(Customer.CUSTOMER.STORE_ID, values);
    }

    /**
     * Fetch records that have <code>first_name IN (values)</code>
     */
    public List<hello.tables.pojos.Customer> fetchByFirstName(String... values) {
        return fetch(Customer.CUSTOMER.FIRST_NAME, values);
    }

    /**
     * Fetch records that have <code>last_name IN (values)</code>
     */
    public List<hello.tables.pojos.Customer> fetchByLastName(String... values) {
        return fetch(Customer.CUSTOMER.LAST_NAME, values);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<hello.tables.pojos.Customer> fetchByEmail(String... values) {
        return fetch(Customer.CUSTOMER.EMAIL, values);
    }

    /**
     * Fetch record that have <code>email IN (values)</code>
     */
    public hello.tables.pojos.Customer fetchOneByEmail(String value) {
        return fetchOne(Customer.CUSTOMER.EMAIL, value);
    }

    /**
     * Fetch records that have <code>address_id IN (values)</code>
     */
    public List<hello.tables.pojos.Customer> fetchByAddressId(Short... values) {
        return fetch(Customer.CUSTOMER.ADDRESS_ID, values);
    }

    /**
     * Fetch records that have <code>activebool IN (values)</code>
     */
    public List<hello.tables.pojos.Customer> fetchByActivebool(Boolean... values) {
        return fetch(Customer.CUSTOMER.ACTIVEBOOL, values);
    }

    /**
     * Fetch records that have <code>create_date IN (values)</code>
     */
    public List<hello.tables.pojos.Customer> fetchByCreateDate(Date... values) {
        return fetch(Customer.CUSTOMER.CREATE_DATE, values);
    }

    /**
     * Fetch records that have <code>last_update IN (values)</code>
     */
    public List<hello.tables.pojos.Customer> fetchByLastUpdate(Timestamp... values) {
        return fetch(Customer.CUSTOMER.LAST_UPDATE, values);
    }

    /**
     * Fetch records that have <code>active IN (values)</code>
     */
    public List<hello.tables.pojos.Customer> fetchByActive(Integer... values) {
        return fetch(Customer.CUSTOMER.ACTIVE, values);
    }
}
