/*
 * This file is generated by jOOQ.
 */
package hello.tables.daos;


import hello.enums.MpaaRating;
import hello.tables.Film;
import hello.tables.records.FilmRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class FilmDao extends DAOImpl<FilmRecord, hello.tables.pojos.Film, Integer> {

    /**
     * Create a new FilmDao without any configuration
     */
    public FilmDao() {
        super(Film.FILM, hello.tables.pojos.Film.class);
    }

    /**
     * Create a new FilmDao with an attached configuration
     */
    public FilmDao(Configuration configuration) {
        super(Film.FILM, hello.tables.pojos.Film.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(hello.tables.pojos.Film object) {
        return object.getFilmId();
    }

    /**
     * Fetch records that have <code>film_id IN (values)</code>
     */
    public List<hello.tables.pojos.Film> fetchByFilmId(Integer... values) {
        return fetch(Film.FILM.FILM_ID, values);
    }

    /**
     * Fetch records that have <code>film_id IN (values)</code>
     */
    public List<hello.tables.pojos.Film> fetchAll(Integer... values) {
        return findAll();
    }

    /**
     * Fetch a unique record that has <code>film_id = value</code>
     */
    public hello.tables.pojos.Film fetchOneByFilmId(Integer value) {
        return fetchOne(Film.FILM.FILM_ID, value);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<hello.tables.pojos.Film> fetchByTitle(String... values) {
        return fetch(Film.FILM.TITLE, values);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<hello.tables.pojos.Film> fetchByDescription(String... values) {
        return fetch(Film.FILM.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>release_year IN (values)</code>
     */
    public List<hello.tables.pojos.Film> fetchByReleaseYear(Integer... values) {
        return fetch(Film.FILM.RELEASE_YEAR, values);
    }

    /**
     * Fetch records that have <code>language_id IN (values)</code>
     */
    public List<hello.tables.pojos.Film> fetchByLanguageId(Short... values) {
        return fetch(Film.FILM.LANGUAGE_ID, values);
    }

    /**
     * Fetch records that have <code>rental_duration IN (values)</code>
     */
    public List<hello.tables.pojos.Film> fetchByRentalDuration(Short... values) {
        return fetch(Film.FILM.RENTAL_DURATION, values);
    }

    /**
     * Fetch records that have <code>rental_rate IN (values)</code>
     */
    public List<hello.tables.pojos.Film> fetchByRentalRate(BigDecimal... values) {
        return fetch(Film.FILM.RENTAL_RATE, values);
    }

    /**
     * Fetch records that have <code>length IN (values)</code>
     */
    public List<hello.tables.pojos.Film> fetchByLength(Short... values) {
        return fetch(Film.FILM.LENGTH, values);
    }

    /**
     * Fetch records that have <code>replacement_cost IN (values)</code>
     */
    public List<hello.tables.pojos.Film> fetchByReplacementCost(BigDecimal... values) {
        return fetch(Film.FILM.REPLACEMENT_COST, values);
    }

    /**
     * Fetch records that have <code>rating IN (values)</code>
     */
    public List<hello.tables.pojos.Film> fetchByRating(MpaaRating... values) {
        return fetch(Film.FILM.RATING, values);
    }

    /**
     * Fetch records that have <code>last_update IN (values)</code>
     */
    public List<hello.tables.pojos.Film> fetchByLastUpdate(Timestamp... values) {
        return fetch(Film.FILM.LAST_UPDATE, values);
    }

    /**
     * Fetch records that have <code>special_features IN (values)</code>
     */
    public List<hello.tables.pojos.Film> fetchBySpecialFeatures(String[]... values) {
        return fetch(Film.FILM.SPECIAL_FEATURES, values);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public List<hello.tables.pojos.Film> fetchByFulltext(Object... values) {
        return fetch(Film.FILM.FULLTEXT, values);
    }
}
